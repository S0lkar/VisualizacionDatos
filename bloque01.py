from CommonTools import *
# add to nav
add_page_title(initial_sidebar_state="expanded", layout="wide")
local_css("frontend.css")

def B1_Frontend():
    titulo = st.empty()

    titulo.markdown(
        '<h1 style="text-align: center; margin-top: 300px;">¬øQuieres saber qu√© nos dicen los datos de la industria de los sat√©lites?</h1>',
        unsafe_allow_html=True)

    window = st.radio("", ["***DATOS***", "***CONSECUENCIAS***"], index=None, horizontal=True)

    if window == '***DATOS***':
        st.title("Crecimiento en el lanzamiento de cohetes")
        st.write(""" Desde los a√±os 50 hemos incrementado exponencialmente el n√∫mero de sat√©lites lanzadosüöÄüöÄ""") 
            
        st.write("""Con el paso de los a√±os cada vez es mayor nuestra evoluci√≥n tecnol√≥gica en comunicaci√≥n, meteorolog√≠a, recogidas de datos, necesidad de investigaci√≥n del espacio exterior...""")

        fig1 = B1_01()
        PositionImage(fig1)
        st.write("\n\n")
       
        st.title("¬øCu√°ntos a√±os de vida esperados tienen los sat√©lites?")
        appointment = st.slider("Se√±ala la fecha en las que est√©s interesado y descubre el ritmo de crecimiento: ", min_value=1978, max_value=1998,
                                value=1980)
        msg = B1_02(appointment)
        st.subheader("{} - lanzamiento de sat√©lites con {} a√±os de vida".format(appointment, msg))
        # text = "<div style='text-align: center;'>{} - {} a√±os de vida</div>".format(appointment, msg)
        # st.markdown(text, unsafe_allow_html=True)
        st.write("Hay que destacar que estos son los a√±os te√≥ricos para los que est√° dise√±ado, los datos nos muestran que existen muchos casos en los que los sat√©lites siguen ejerciendo su funci√≥n muchos mas a√±os de los esperados. Contrasta la informaci√≥n de ambas gr√°ficas y aprecia c√≥mo incluso doblan el n√∫mero de a√±os previstos.")

    if window == '***CONSECUENCIAS***':
        # st.subheader("La basura espacial se ha multiplicado por 5 en los √∫ltimos 10 a√±os")
        #st.markdown(
        #    f"""
        #    <div style="text-align:center; color:orange; font-size:38px; padding:10px;">
        #    La basura espacial se ha multiplicado por 5 en los √∫ltimos 10 a√±os
        #    </div>""", unsafe_allow_html=True)
        st.title("Acumulaci√≥n desmesurdad de basura espacial")
        #st.title("El crecimiento exponencial en el lanzamiento de cohete a conducido a una QUINTUPLICACI√ìN de la basura espacial en los √∫ltimos 10 A√ëOS")
        st.write("""<p style='color:black;font-size:20px;font-weight:bold;'>EL crecimiento exponencial en el lanzamiento de cohetes ha conducido a una <span style='color:darkred;'>QUINTUPLICACI√ìN</span> de la basura espacial en los √∫ltimos <span style='color:darkred;'>10 A√ëOS</span>. ¬°¬°Observa c√≥mo crece!!</p>""", unsafe_allow_html=True)

        fig = B1_03()
        PositionImage(fig)
        
        st.title("¬øQu√© efectos negativos trae la basura espacial?")
        st.write(""" Todos los sat√©lites que se lanzan pasan a ser basura espacial. El riesgo de la basura espacial reside las velocidades a las que se desplaza en el espacio y el peligro que supone el impacto de ella contra sat√©lites que est√°n desarrollando su funci√≥n o, en el peor de los casos, a misiones tripuladas. """)
        st.subheader("")
        st.image('./imgs/basura_espacial_bloque1.jpg')


def B1_01():
    data = pd.read_csv(FILENAME)
    # Paso a fecha
    data.loc[:, "Date of Launch"] = pd.to_datetime(data["Date of Launch"]).dt.year
    # Me quedo con el a√±o y quito los 4 valores nulos
    df = pd.DataFrame(data["Date of Launch"])
    df = df.dropna()

    age = np.arange(1974, 2016, dtype=int)
    df_por_a√±o = df["Date of Launch"].value_counts().sort_index()
    df_por_a√±o = df_por_a√±o.reindex(age, fill_value=0).reset_index()

    # Visualizaci√≥n
    fig = px.line(df_por_a√±o, x="Date of Launch", y="count",
                  labels={"Date of Launch": "A√±o de Lanzamiento", "count": "N√∫mero de lanzamientos"},
                  title='N√∫mero de lanzamientos')
    return fig


def B1_02(appointment):
    data = pd.read_csv(FILENAME)
    df = data[["Date of Launch", "Expected Lifetime (Years)"]]
    df.loc[:, "Date of Launch"] = pd.to_datetime(df["Date of Launch"]).dt.year
    # Ordeno en orden cronol√≥gico
    df_orden = df.dropna(axis=0).sort_values(by="Date of Launch")
    # Reseteo los √≠ndices
    df_orden = df_orden.reset_index(drop=True)
    # Suprimo los caracteres no num√©ricos
    cleaned_val = []

    # Suprimo los valores que no son n√∫meros ni guiones
    for val in df_orden["Expected Lifetime (Years)"]:
        cleaned = re.sub(r'[^0-9.-]', '', val)
        cleaned_val.append(cleaned)
    # Suprimo los intervalos y los sutituyo por el valor medio
    cleaned_val_out_intervals = []

    for val2 in cleaned_val:
        if '-' in val2:
            parts = val2.split('-')
            val = (float(parts[0]) + float(parts[1])) / 2
            cleaned_val_out_intervals.append(val)

        else:
            cleaned_val_out_intervals.append(float(val2))

    cleaned_df = pd.DataFrame({"Cleaned_Values": cleaned_val_out_intervals})
    result = pd.concat([df_orden["Date of Launch"], cleaned_df], axis=1)
    max_year = result.groupby('Date of Launch')['Cleaned_Values'].max()
    df_final = max_year.reset_index()
    df_final.columns = ['A√±os', 'Timelife']
    df_final['A√±os'] = df_final['A√±os'].astype(int)
    todos_los_a√±os = list(range(1978, 2016 + 1))  # Crear una lista con todos los a√±os
    df_final = df_final.set_index('A√±os').reindex(todos_los_a√±os).fillna(0).reset_index()

    # Corto por el appointment
    df_cortado = df_final[df_final['A√±os'] <= appointment]
    msg = df_cortado["Timelife"].max()

    return msg


def B1_03():
    data = pd.read_csv(FILENAME)
    # Paso a fecha
    date_launch = pd.to_datetime(data["Date of Launch"])
    # Me quedo con el a√±o y quito los 4 valores nulos
    date_year = (date_launch.dt.year).dropna()

    age = np.arange(1974, 2016, dtype=int)
    cuentas = date_year.value_counts()
    # Hay algunos a√±os que no existen lanzamientos, necesito rellenar con 0
    df_frecuencias = cuentas.reindex(age, fill_value=0).reset_index()
    # Renombro las columnas
    df_frecuencias = df_frecuencias.rename(columns={'count': 'Frecuencia'})
    # Calculo la cumulaci√≥n
    df_frecuencias["Frecuencia Acum"] = df_frecuencias["Frecuencia"].cumsum()
    # Represento gr√°ficamente
    fig = px.bar(df_frecuencias, x='Date of Launch', y='Frecuencia Acum',
                 labels={"Date of Launch": "A√±o", "Frecuencia Acum": "Acumulaci√≥n"}, title='Acumulaci√≥n de sat√©lites')

    return fig


B1_Frontend()
